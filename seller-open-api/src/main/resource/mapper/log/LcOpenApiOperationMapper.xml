<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hjy.dao.log.ILcOpenApiOperationDao">

	<resultMap id="BaseResultMap" type="com.hjy.entity.log.LcOpenApiOperation">
		<id column="zid" property="zid" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />
		<result column="seller_code" property="sellerCode" jdbcType="VARCHAR" />
		<result column="api_name" property="apiName" jdbcType="VARCHAR" />
		<result column="class_url" property="classUrl" jdbcType="VARCHAR" />
		<result column="request_json" property="requestJson" jdbcType="LONGVARCHAR" />
		<result column="response_json" property="responseJson" jdbcType="LONGVARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="request_time" property="requestTime" jdbcType="TIMESTAMP" />
    	<result column="response_time" property="responseTime" jdbcType="TIMESTAMP" />
		<result column="remark" property="remark" jdbcType="LONGVARCHAR" />
	</resultMap>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
			*
		from 
			lc_open_api_operation
		where 
			zid = #{zid,jdbcType=INTEGER}
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from lc_open_api_operation where zid = #{zid,jdbcType=INTEGER}
	</delete>
	
	<insert id="insertSelective" parameterType="com.hjy.entity.log.LcOpenApiOperation">
		insert into lc_open_api_operation
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="zid != null">
				zid,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="sellerCode != null">
				seller_code,
			</if>
			<if test="apiName != null">
				api_name,
			</if>
			<if test="classUrl != null">
				class_url,
			</if>
			<if test="requestJson != null">
				request_json,
			</if>
			<if test="responseJson != null">
				response_json,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="requestTime != null" >
	        	request_time,
	        </if>
      		<if test="responseTime != null" >
        		response_time,
      		</if>
			<if test="remark != null">
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="zid != null">
				#{zid,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="sellerCode != null">
				#{sellerCode,jdbcType=VARCHAR},
			</if>
			<if test="apiName != null">
				#{apiName,jdbcType=VARCHAR},
			</if>
			<if test="classUrl != null">
				#{classUrl,jdbcType=VARCHAR},
			</if>
			<if test="requestJson != null">
				#{requestJson,jdbcType=LONGVARCHAR},
			</if>
			<if test="responseJson != null">
				#{responseJson,jdbcType=LONGVARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="requestTime != null" >
        		#{requestTime,jdbcType=TIMESTAMP},
      		</if>
	      	<if test="responseTime != null" >
	        	#{responseTime,jdbcType=TIMESTAMP},
	      	</if>
			<if test="remark != null">
				#{remark,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	
	<update id="updateSelective" parameterType="com.hjy.entity.log.LcOpenApiOperation">
		update lc_open_api_operation
		<set>
			<if test="uid != null">
				uid = #{uid,jdbcType=VARCHAR},
			</if>
			<if test="sellerCode != null">
				seller_code = #{sellerCode,jdbcType=VARCHAR},
			</if>
			<if test="apiName != null">
				api_name = #{apiName,jdbcType=VARCHAR},
			</if>
			<if test="classUrl != null">
				class_url = #{classUrl,jdbcType=VARCHAR},
			</if>
			<if test="requestJson != null">
				request_json = #{requestJson,jdbcType=LONGVARCHAR},
			</if>
			<if test="responseJson != null">
				response_json = #{responseJson,jdbcType=LONGVARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="requestTime != null" >
        		request_time = #{requestTime,jdbcType=TIMESTAMP},
      		</if>
      		<if test="responseTime != null" >
       		 	response_time = #{responseTime,jdbcType=TIMESTAMP},
      		</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where zid = #{zid,jdbcType=INTEGER}
	</update>
	
 
</mapper>







